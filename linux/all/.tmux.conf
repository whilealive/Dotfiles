# ==================================================================
# FILE     .tmux.conf
# OS       linux
# MACHINE  all
# INFO     -
#
# DATE     11.04.2025
# OWNER    Bischofberger
# ==================================================================

# use Ctrl-x instead of Ctrl-b
unbind C-b
set-option -g prefix C-x
bind-key C-x send-prefix


# start a non-login shell
set -g default-command "${SHELL}"


# set correct term
set -g default-terminal "tmux-256color"
set -as terminal-overrides ",*-256color:Tc"


# don't wait after escape sequences
set escape-time 0


# reload config without killing server
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..."


# enable mouse with scrolling
set -g mouse on
bind-key -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"


# copy mode
# mostly taken from `https://github.com/gpakosz/.tmux`
setw -g mode-keys vi  # set vi keys
unbind [
bind Escape copy-mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Wayland clipboard
if -b '[ "$XDG_SESSION_TYPE" = "wayland" ] && command -v wl-copy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - > /dev/clipboard"'


# paste buffers
unbind p
bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from
 

# pane selection
bind Left select-pane -L
bind Right select-pane -R
bind Up select-pane -U
bind Down select-pane -D

# window movement
bind-key S command-prompt -p "swap window with:" "swap-window -t ':%%'"
bind-key M command-prompt -p "move window to:" "move-window -t ':%%'"


# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server


# toggle statusbar
bind-key b set-option status


# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev


# scrollback buffer n lines
set -g history-limit 10000


# on-screen time for display-panes in ms
set -g display-panes-time 2000


# start window indexing at one
set -g base-index 1
set -g renumber-windows on


# enable wm window titles
set -g set-titles on


# enable auto renaming
setw -g automatic-rename on


# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I [ #W ]"


# statusbar 
set -g window-status-format "#I:#W"
set -g window-status-current-format "#I:#W"
set -g status-right "%a %d.%m.%y"
set -g status-keys vi
set -g status-interval 1
set -g status-justify centre 
set -g status-fg white
set -g status-bg "#484030"
#set -g status-bg "#111111"


# default window title colors
set-window-option -g  window-status-style fg=white
set-window-option -ag window-status-style bg=default
set-window-option -ag window-status-style dim


# active window title colors
set-window-option -g  window-status-current-style fg=colour9
set-window-option -ag window-status-current-style bg=default
set-window-option -ag window-status-current-style dim


# command/message line colors
set -g  message-style fg=white
set -ag message-style bg=black
set -ag message-style bright
