# ==================================================================
# FILE      config_base
# INFO      base configuration for sway (machine-independent)
#
# DATE      24.03.2025
# OWNER     Bischofberger
# ==================================================================

# Read `man 5 sway` for a complete reference.

# red color for focused window borders
#client.<class>         <border>  <background>    <text>      <indicator>   <child_border> 
client.focused          "#ff6565" "#ff6565"      "#ffffff"   "#2e9ef4"      "#ff6565"
#client.focused_inactive "#23242a" "$background"  "#666666"   "#000000"     "#999999"
#client.unfocused        "#666666" "#fff5e5"      "#666666"   "#000000"     "#999999"

default_border pixel 3
#default_border normal 3

exec wl-paste --watch cliphist store

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term foot tmux

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wmenu-run

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
swaybg_command -
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# keyboard layout
input * {
  xkb_layout "ch"
  #xkb_layout "ch,us"
}

# Wacom tablets
#
# tool_mode relative does not work well with xournalpp...
input type:tablet_tool {
  tool_mode * relative
  pointer_accel 0.5
}

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+p exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace 7:web
bindsym $mod+8 workspace 8:music
bindsym $mod+9 workspace 9:btop
bindsym $mod+0 workspace 10:virt
bindsym $mod+w workspace work
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace 7:web
bindsym $mod+Shift+8 move container to workspace 8:music
bindsym $mod+Shift+9 move container to workspace 9:btop
bindsym $mod+Shift+0 move container to workspace 10:virt
bindsym $mod+Shift+w move container to workspace work
## my current BMZ wokspaces (handling more than 10)
#bindsym $mod+Ctrl+1 workspace 11:BGS22c
#bindsym $mod+Ctrl+2 workspace 12:EVT24e
#bindsym $mod+Ctrl+3 workspace 13:BZI24a
#bindsym $mod+Ctrl+4 workspace 14:BIN21e
#bindsym $mod+Ctrl+5 workspace 15:BEL22a
#bindsym $mod+Ctrl+6 workspace 16:ETS24b
#bindsym $mod+Ctrl+Shift+1 move container to workspace 11:BGS22c
#bindsym $mod+Ctrl+Shift+2 move container to workspace 12:EVT24e
#bindsym $mod+Ctrl+Shift+3 move container to workspace 13:BZI24a
#bindsym $mod+Ctrl+Shift+4 move container to workspace 14:BIN21e
#bindsym $mod+Ctrl+Shift+5 move container to workspace 15:BEL22a
#bindsym $mod+Ctrl+Shift+6 move container to workspace 16:ETS24b

bindsym $mod+Tab workspace back_and_forth

# Use $mod+[left|right] to quickly switch workspaces (instead of window focus)
bindsym $mod+Right workspace next
bindsym $mod+Left workspace prev

# rename current workspace
#bindsym $mod+Insert exec echo "" | wmenu -S 000000 -M 000000 -p "rename workspace to" | xargs -r swaymsg rename workspace to
#bindsym $mod+Insert exec swaymsg -p -t get_workspaces | awk '/(focused)/ {print $2}' | wmenu -S 000000 -M 000000 -p "rename workspace to" | xargs -r swaymsg rename workspace to
#bindsym $mod+Shift+Insert exec wl-copy $(swaymsg -p -t get_workspaces | awk '/(focused)/ {print $2}')
bindsym $mod+Insert exec swayrenameworkspace

# use `swaymsg -t get_tree` to get window informations
assign [app_id="firefox"] 7:web
for_window [app_id="firefox"] focus

assign [app_id="org.gnome.Lollypop"] 8:music
for_window [app_id="org.gnome.Lollypop"] focus

# `foot --app-id=btop btop`  (see .zshrc)
assign [app_id="btop"] 9:btop
for_window [app_id="btop"] focus

assign [instance="VirtualBox Manager"] 10:virt
for_window [instance="VirtualBox Manager"] floating enable
for_window [instance="VirtualBox Manager"] focus
for_window [instance="VirtualBox Machine"] floating enable

for_window [app_id="galculator"] floating enable


# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
#bindsym $mod+h splith  # not working...
bindsym $mod+b splith
bindsym $mod+v splitv
bindsym $mod+n split none

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Shift+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
  bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

# Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

# Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
#exec mako
exec nm-applet --indicator

# Read `man 5 sway-bar` for more information about this section.
bar {
  swaybar_command waybar
  
#  position top
#
#  # not working with nm-applet:
#  tray_bindcode 272 ContextMenu
#
## When the status_command prints a new line to stdout, swaybar updates.
## The default just shows the current date and time.
#    status_command while ~/.config/sway/scripts/sway_bar.sh; do sleep 10; done
#
#    colors {
#      statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
}
